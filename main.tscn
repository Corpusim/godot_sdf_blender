[gd_scene load_steps=9 format=2]

[ext_resource path="res://addons/zylann.raymarcher/raymarcher_sphere.gd" type="Script" id=1]
[ext_resource path="res://addons/zylann.raymarcher/raymarcher.gd" type="Script" id=2]
[ext_resource path="res://addons/zylann.raymarcher/raymarcher_box.gd" type="Script" id=3]
[ext_resource path="res://addons/zylann.raymarcher/raymarcher_torus.gd" type="Script" id=4]

[sub_resource type="Shader" id=1]
code = "shader_type spatial;
//render_mode unshaded;//, depth_draw_alpha_prepass;

uniform mat4 u_shape0_transform;
uniform vec4 u_shape0_color;
uniform float u_shape0_smoothness;
uniform float u_shape0_radius;
uniform mat4 u_shape1_transform;
uniform vec4 u_shape1_color;
uniform float u_shape1_smoothness;
uniform float u_shape1_radius;
uniform mat4 u_shape2_transform;
uniform vec4 u_shape2_color;
uniform float u_shape2_smoothness;
uniform vec3 u_shape2_size;
uniform mat4 u_shape3_transform;
uniform vec4 u_shape3_color;
uniform float u_shape3_smoothness;
uniform vec3 u_shape3_size;
uniform mat4 u_shape4_transform;
uniform vec4 u_shape4_color;
uniform float u_shape4_smoothness;
uniform vec3 u_shape4_size;
uniform mat4 u_shape5_transform;
uniform vec4 u_shape5_color;
uniform float u_shape5_smoothness;
uniform float u_shape5_radius;
uniform mat4 u_shape6_transform;
uniform vec4 u_shape6_color;
uniform float u_shape6_smoothness;
uniform float u_shape6_radius;
uniform mat4 u_shape7_transform;
uniform vec4 u_shape7_color;
uniform float u_shape7_smoothness;
uniform float u_shape7_radius;
uniform mat4 u_shape8_transform;
uniform vec4 u_shape8_color;
uniform float u_shape8_smoothness;
uniform float u_shape8_radius;
uniform mat4 u_shape9_transform;
uniform vec4 u_shape9_color;
uniform float u_shape9_smoothness;
uniform float u_shape9_radius;
uniform mat4 u_shape10_transform;
uniform vec4 u_shape10_color;
uniform float u_shape10_smoothness;
uniform float u_shape10_radius;
uniform float u_shape10_thickness;
uniform mat4 u_shape11_transform;
uniform vec4 u_shape11_color;
uniform float u_shape11_smoothness;
uniform float u_shape11_radius;

const int MAX_STEPS = 64;
const float MAX_DISTANCE = 100.0;
const float SURFACE_DISTANCE = 0.005;
const float NORMAL_PRECISION = 0.0005;

void vertex() {
	POSITION = vec4(VERTEX, 1.0);
}

float get_sphere(vec3 p, vec3 center, float radius) {
	return length(p - center) - radius;
}

float get_box(vec3 p, vec3 b) {
	vec3 q = abs(p) - b;
	return length(max(q, 0.0)) + min(max(q.x, max(q.y, q.z)), 0.0);
}

float get_torus(vec3 p, vec2 r) {
	vec2 q = vec2(length(p.xz) - r.x, p.y);
	return length(q) - r.y;
}

// Note: `union` is a reserved keyword but Godot doesn't seem to catch that
float sharp_union(float a, float b) {
	return min(a, b);
}

float smooth_union(float a, float b, float k) {
	float h = clamp(0.5 + 0.5 * (b - a) / k, 0.0, 1.0);
	return mix(b, a, h) - k * h * (1.0 - h);
}

vec4 smooth_union_c(float da, float db, vec3 ca, vec3 cb, float k) {
	float h = clamp(0.5 + 0.5 * (db - da) / k, 0.0, 1.0);
	float d = mix(db, da, h) - k * h * (1.0 - h);
	vec3 col = mix(cb, ca, h);
	return vec4(col, d);
}

vec4 smooth_subtract_c(float db, float da, vec3 ca, vec3 cb, float k) {
	float h = clamp(0.5 - 0.5 * (db + da) / k, 0.0, 1.0);
    float d = mix(db, -da, h) + k * h * (1.0 - h);
	vec3 col = mix(ca, cb, h);
	return vec4(col, d);
}

float subtract(float a, float b) {
	return max(a, -b);
}

float intersect(float a, float b) {
	return max(a, b);
}

vec3 repeat_domain_inf(vec3 p, vec3 c) {
	return mod(p + 0.5 * c, c) - 0.5 * c;
}

vec3 repeat_domain(vec3 p, vec3 c, vec3 l) {
	return p - c * clamp(round(p / c), -l, l);
}

//<functions>
//</functions>

vec4 get_scene(vec3 p, float time) {
	vec4 s = vec4(1.0, 1.0, 1.0, 99999.0);
	
	s = smooth_union_c(s.w, get_sphere((u_shape0_transform * vec4(p, 1.0)).xyz, vec3(0.0), u_shape0_radius), s.rgb, u_shape0_color.rgb, u_shape0_smoothness);
	s = smooth_union_c(s.w, get_sphere((u_shape1_transform * vec4(p, 1.0)).xyz, vec3(0.0), u_shape1_radius), s.rgb, u_shape1_color.rgb, u_shape1_smoothness);
	s = smooth_union_c(s.w, get_box((u_shape2_transform * vec4(p, 1.0)).xyz, u_shape2_size), s.rgb, u_shape2_color.rgb, u_shape2_smoothness);
	s = smooth_union_c(s.w, get_box((u_shape3_transform * vec4(p, 1.0)).xyz, u_shape3_size), s.rgb, u_shape3_color.rgb, u_shape3_smoothness);
	s = smooth_union_c(s.w, get_box((u_shape4_transform * vec4(p, 1.0)).xyz, u_shape4_size), s.rgb, u_shape4_color.rgb, u_shape4_smoothness);
	s = smooth_union_c(s.w, get_sphere((u_shape5_transform * vec4(p, 1.0)).xyz, vec3(0.0), u_shape5_radius), s.rgb, u_shape5_color.rgb, u_shape5_smoothness);
	s = smooth_union_c(s.w, get_sphere((u_shape6_transform * vec4(p, 1.0)).xyz, vec3(0.0), u_shape6_radius), s.rgb, u_shape6_color.rgb, u_shape6_smoothness);
	s = smooth_union_c(s.w, get_sphere((u_shape7_transform * vec4(p, 1.0)).xyz, vec3(0.0), u_shape7_radius), s.rgb, u_shape7_color.rgb, u_shape7_smoothness);
	s = smooth_union_c(s.w, get_sphere((u_shape8_transform * vec4(p, 1.0)).xyz, vec3(0.0), u_shape8_radius), s.rgb, u_shape8_color.rgb, u_shape8_smoothness);
	s = smooth_subtract_c(s.w, get_sphere((u_shape9_transform * vec4(p, 1.0)).xyz, vec3(0.0), u_shape9_radius), s.rgb, u_shape9_color.rgb, u_shape9_smoothness);
	s = smooth_union_c(s.w, get_torus((u_shape10_transform * vec4(p, 1.0)).xyz, vec2(u_shape10_radius, u_shape10_thickness)), s.rgb, u_shape10_color.rgb, u_shape10_smoothness);
	s = smooth_subtract_c(s.w, get_sphere((u_shape11_transform * vec4(p, 1.0)).xyz, vec3(0.0), u_shape11_radius), s.rgb, u_shape11_color.rgb, u_shape11_smoothness);
	
	return s;
}

vec3 get_normal(vec3 p, float time) {
	float d = get_scene(p, time).w;
	vec2 e = vec2(NORMAL_PRECISION, 0.0);
	vec3 n = d - vec3(
		get_scene(p - e.xyy, time).w,
		get_scene(p - e.yxy, time).w,
		get_scene(p - e.yyx, time).w);
	return normalize(n);
}

vec4 raymarch(vec3 ray_origin, vec3 ray_dir, out vec3 out_normal, float time) {
	// Sphere marching
	float d = 0.0;
	vec3 rgb;
	for (int i = 0; i < MAX_STEPS; ++i) {
		vec3 p = ray_origin + ray_dir * d;
		vec4 scene_info = get_scene(p, time);
		rgb = scene_info.rgb;
		float ds = scene_info.w;
		d += ds;
		if (d > MAX_DISTANCE || ds < SURFACE_DISTANCE) {
			break;
		}
	}

	vec3 hit_pos = ray_origin + ray_dir * d;
	out_normal = get_normal(hit_pos, time);

	return vec4(rgb, d);
}

float linear_depth_to_depth(float linear_depth, mat4 projection_matrix) {
	vec4 clip_space_pos = projection_matrix * vec4(0.0, 0.0, linear_depth, 1.0);
	float ndc_depth = clip_space_pos.z / clip_space_pos.w;
	return ndc_depth * 0.5 + 0.5;
}

void fragment() {
	// Could certainly be optimized I think
	vec3 ndc = vec3(SCREEN_UV, 0.0) * 2.0 - 1.0;
	vec4 view_coords = INV_PROJECTION_MATRIX * vec4(ndc, 1.0);
	view_coords.xyz /= view_coords.w;
	vec3 world_cam_pos = (CAMERA_MATRIX * vec4(0.0, 0.0, 0.0, 1.0)).xyz;
	vec4 world_coords = CAMERA_MATRIX * vec4(view_coords.xyz, 1.0);
	
	vec3 ray_origin = world_coords.xyz;
	vec3 ray_dir = normalize(world_coords.xyz - world_cam_pos);
	
	float time = TIME;
	
	vec3 normal;
	vec4 rm = raymarch(ray_origin, ray_dir, normal, time);
	float d = rm.w;

	// TODO Why the fuck is this not working?
	// That 1/x is not right, but somehow it does something almost right?
	DEPTH = 1.0/linear_depth_to_depth(d, PROJECTION_MATRIX);
	if (d > 99.0) {
		discard;
	}
	
	NORMAL = (INV_CAMERA_MATRIX * vec4(normal, 0.0)).xyz;
	
	//ALBEDO = ray_dir * 0.1;
	ALBEDO = rm.rgb;
	//ALBEDO = normal;
	/*if(d > 0.0) {
		ALBEDO = vec3(0.0, 1.0, 0.0);
	}*/
}
"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/u_shape0_transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.937045, -4.08737, 4.83898 )
shader_param/u_shape0_color = Color( 0.25098, 0.764706, 0.270588, 1 )
shader_param/u_shape0_smoothness = 0.228
shader_param/u_shape0_radius = 1.0
shader_param/u_shape1_transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.977327, -1.67708, -0.137158 )
shader_param/u_shape1_color = Color( 0.203922, 0.203922, 0.203922, 1 )
shader_param/u_shape1_smoothness = 0.0
shader_param/u_shape1_radius = 1.065
shader_param/u_shape2_transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -1.00964, -4.09981, 1.46596 )
shader_param/u_shape2_color = Color( 0.337255, 0.576471, 0.831373, 1 )
shader_param/u_shape2_smoothness = 0.042
shader_param/u_shape2_size = Vector3( 0.461, 0.551, 1.481 )
shader_param/u_shape3_transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -1.00964, -4.1119, 3.41806 )
shader_param/u_shape3_color = Color( 0.337255, 0.576471, 0.831373, 1 )
shader_param/u_shape3_smoothness = 0.362
shader_param/u_shape3_size = Vector3( 0.195, 0.324, 0.689 )
shader_param/u_shape4_transform = Transform( 1, 0, 0, 0, 0.445885, 0.89509, 0, -0.89509, 0.445885, -1.00964, -1.02941, 2.57916 )
shader_param/u_shape4_color = Color( 0.337255, 0.576471, 0.831373, 1 )
shader_param/u_shape4_smoothness = 0.235
shader_param/u_shape4_size = Vector3( 0.208, 0.331, 1 )
shader_param/u_shape5_transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -1.19431, -4.73223, 0.37203 )
shader_param/u_shape5_color = Color( 0.101961, 1, 0, 1 )
shader_param/u_shape5_smoothness = 0.107
shader_param/u_shape5_radius = 0.15
shader_param/u_shape6_transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -1.19431, -4.73223, 0.803328 )
shader_param/u_shape6_color = Color( 0.101961, 1, 0, 1 )
shader_param/u_shape6_smoothness = 0.107
shader_param/u_shape6_radius = 0.15
shader_param/u_shape7_transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -1.19431, -4.73223, 1.30031 )
shader_param/u_shape7_color = Color( 0.101961, 1, 0, 1 )
shader_param/u_shape7_smoothness = 0.107
shader_param/u_shape7_radius = 0.15
shader_param/u_shape8_transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -1.19431, -4.73223, 1.7934 )
shader_param/u_shape8_color = Color( 0.101961, 1, 0, 1 )
shader_param/u_shape8_smoothness = 0.107
shader_param/u_shape8_radius = 0.15
shader_param/u_shape9_transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -1.04376, -4.14364, 1.4408 )
shader_param/u_shape9_color = Color( 0.631373, 0.431373, 0.0431373, 1 )
shader_param/u_shape9_smoothness = 0.062
shader_param/u_shape9_radius = 0.678
shader_param/u_shape10_transform = Transform( 0.147854, 0.0268545, -0.988645, -0.0491319, 0.998597, 0.0197771, 0.987788, 0.0456498, 0.148966, -5.00394, -3.93677, -0.345395 )
shader_param/u_shape10_color = Color( 1, 1, 1, 1 )
shader_param/u_shape10_smoothness = 0.143
shader_param/u_shape10_radius = 1.098
shader_param/u_shape10_thickness = 0.085
shader_param/u_shape11_transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -1.04376, -4.14364, 5.58157 )
shader_param/u_shape11_color = Color( 0.631373, 0.431373, 0.0431373, 1 )
shader_param/u_shape11_smoothness = 0.062
shader_param/u_shape11_radius = 0.678

[sub_resource type="QuadMesh" id=3]
size = Vector2( 2, 2 )

[sub_resource type="CubeMesh" id=4]

[node name="Node" type="Node"]

[node name="MeshInstance" type="MeshInstance" parent="."]
material_override = SubResource( 2 )
cast_shadow = 0
mesh = SubResource( 3 )
material/0 = null
script = ExtResource( 2 )

[node name="Spatial2" type="Spatial" parent="MeshInstance"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.937045, 4.08737, -4.83898 )
script = ExtResource( 1 )
color = Color( 0.25098, 0.764706, 0.270588, 1 )
smoothness = 0.228
radius = 1.0

[node name="Spatial3" type="Spatial" parent="MeshInstance"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.977327, 1.67708, 0.137158 )
script = ExtResource( 1 )
color = Color( 0.203922, 0.203922, 0.203922, 1 )
smoothness = 0.0
radius = 1.065

[node name="Spatial4" type="Spatial" parent="MeshInstance"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 1.00964, 4.09981, -1.46596 )
script = ExtResource( 3 )
color = Color( 0.337255, 0.576471, 0.831373, 1 )
smoothness = 0.042
size = Vector3( 0.461, 0.551, 1.481 )

[node name="Spatial6" type="Spatial" parent="MeshInstance"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 1.00964, 4.1119, -3.41806 )
script = ExtResource( 3 )
color = Color( 0.337255, 0.576471, 0.831373, 1 )
smoothness = 0.362
size = Vector3( 0.195, 0.324, 0.689 )

[node name="Spatial5" type="Spatial" parent="MeshInstance"]
transform = Transform( 1, 0, 0, 0, 0.445885, -0.89509, 0, 0.89509, 0.445885, 1.00964, 2.76758, -0.228593 )
script = ExtResource( 3 )
color = Color( 0.337255, 0.576471, 0.831373, 1 )
smoothness = 0.235
size = Vector3( 0.208, 0.331, 1 )

[node name="Spatial" type="Spatial" parent="MeshInstance"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 1.19431, 4.73223, -0.37203 )
script = ExtResource( 1 )
color = Color( 0.101961, 1, 0, 1 )
smoothness = 0.107
radius = 0.15

[node name="Spatial7" type="Spatial" parent="MeshInstance"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 1.19431, 4.73223, -0.803328 )
script = ExtResource( 1 )
color = Color( 0.101961, 1, 0, 1 )
smoothness = 0.107
radius = 0.15

[node name="Spatial8" type="Spatial" parent="MeshInstance"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 1.19431, 4.73223, -1.30031 )
script = ExtResource( 1 )
color = Color( 0.101961, 1, 0, 1 )
smoothness = 0.107
radius = 0.15

[node name="Spatial9" type="Spatial" parent="MeshInstance"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 1.19431, 4.73223, -1.7934 )
script = ExtResource( 1 )
color = Color( 0.101961, 1, 0, 1 )
smoothness = 0.107
radius = 0.15

[node name="Spatial10" type="Spatial" parent="MeshInstance"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 1.04376, 4.14364, -1.4408 )
script = ExtResource( 1 )
operation = 1
color = Color( 0.631373, 0.431373, 0.0431373, 1 )
smoothness = 0.062
radius = 0.678

[node name="Spatial12" type="Spatial" parent="MeshInstance"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 1.04376, 4.14364, -5.58157 )
script = ExtResource( 1 )
operation = 1
color = Color( 0.631373, 0.431373, 0.0431373, 1 )
smoothness = 0.062
radius = 0.678

[node name="Spatial11" type="Spatial" parent="MeshInstance"]
transform = Transform( 0.147854, -0.0491318, 0.987788, 0.0268545, 0.998596, 0.0456498, -0.988644, 0.019777, 0.148966, 0.88761, 4.08139, -4.81781 )
script = ExtResource( 4 )
smoothness = 0.143
radius = 1.098
thickness = 0.085

[node name="DirectionalLight" type="DirectionalLight" parent="."]
transform = Transform( 1, 0, 0, 0, 0.472058, 0.881567, 0, -0.881567, 0.472058, -1.26862, 0.0978122, 9.01855 )

[node name="MeshInstance2" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 2.79147, 0.571657, -9.3953 )
mesh = SubResource( 4 )
material/0 = null

[node name="Camera" type="Camera" parent="."]
transform = Transform( 0.561, -0.378981, 0.735971, 0, 0.889051, 0.457808, -0.827816, -0.25683, 0.498757, 2.91928, 1.4725, 1.68999 )
